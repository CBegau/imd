/**************************************************************************\
**                                                           (C)2002 RUS  **
**                                                                        **
** Description: Read IMD checkpoint files from ITAP.                      **
**                                                                        **
**                                                                        **
**                                                                        **
**                                                                        **
**                                                                        **
** Author:                                                                **
**                                                                        **
**                     Juergen Schulze-Doebold                            **
**     High Performance Computing Center University of Stuttgart          **
**                         Allmandring 30                                 **
**                         70550 Stuttgart                                **
**                                                                        **
** Cration Date: 03.09.2002                                               **
\**************************************************************************/

#ifndef _READ_IMD_H_
#define _READ_IMD_H_

#include <coModule.h>

/** Reader module for IMD checkpoint files. The file format was developed
    at the ITAP at the University of Stuttgart.
    This is an example file with three atoms:<PRE>
    #F A 1 1 1 3 3 1
    #C number type mass x y z vx vy vz Epot
    #X      3.0766609395000000e+02 0.0000000000000000e+00 0.0000000000000000e+00
    #Y      0.0000000000000000e+00 1.0442535916900000e+02 0.0000000000000000e+00
    #Z      0.0000000000000000e+00 0.0000000000000000e+00 1.4357751050999990e+01
    ## Generated by /hwwt3e/rus/ita/pof30/bin/cray-t3e/imd_mpi_nve_stress_ordpar_efilter on Thu Jun 27 23:56:46 2002
    #E
    18368 0     1.000000    12.311201    48.337746     1.031030    -0.032552     0.047432    -0.014428   -17.623187
    18800 0     1.000000    12.310159    48.341527     3.080848    -0.024594     0.040695    -0.009033   -17.630691
    15772 1     1.000000    10.766565    47.946747     2.054420    -0.009312    -0.063240    -0.027128   -21.059210
    </PRE>
    @author Juergen Schulze
*/
class coReadIMD : public coModule
{
    private:
        // Ports:
        coOutPort* poPoints;
        coOutPort* poType;
        coOutPort* poMass;
        coOutPort* poSpeed;
        coOutPort* poEpot;
        
        // Parameters:
        coBrowserParam* pbrCheckpointFile;    ///< name of first checkpoint file of a sequence
        coBooleanParam* pboPeriodic;          ///< true = use periodic boundaries with specified center, false = no periodic boundaries
        coFloatVectorParam* pfvPeriodic;      ///< bottom left front corner of bounding box for periodic boundary conditions
        coBooleanParam* pboConstrainSpeed;    ///< true = atom display is constrained to a certain speed range, false = no constraints
        coFloatScalarParam* pfsSpeedMin;      ///< minimum absolute speed value to display
        coFloatScalarParam* pfsSpeedMax;      ///< maximum absolute speed value to display
        coFloatScalarParam* pfsTypeOffset;    ///< offset value to add to type information
        coBooleanParam* pboIgnoreWarnings;    ///< true = don't display warnings when reading a file
        
        // Methods:
        virtual int compute();
        float absVector(float, float, float);

    public:
        coReadIMD();
};

#endif                                       
